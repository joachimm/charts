apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
spec: 
  replicas: {{ .Values.replicas }}
  strategy:
    type: Recreate
    rollingUpdate: ~
  selector:
    matchLabels:
      name: {{ .Release.Name }}
  template:
    metadata:
      labels:
        name: {{ .Release.Name }}
      annotations:
        checksum/configmap: {{ include (print $.Chart.Name "/templates/configmap.yaml") . | sha256sum }}
        checksum/attributes: {{ .Values | toString | sha256sum }}
    spec:
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}

      hostNetwork: {{ .Values.hostNetwork }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 0
      containers:
        - name: matchbox
          image: quay.io/coreos/matchbox:v0.7.1
          imagePullPolicy: IfNotPresent
          args:
            - -log-level=debug
            - -address=0.0.0.0:{{ .Values.port }} # todo listen on one ip only
          ports:
            - name: http
              containerPort: {{ .Values.port }}
          resources:
            requests:
              cpu: "50m"
              memory: "50Mi"
          volumeMounts:
            - name: matchbox-groups
              mountPath: /var/lib/matchbox/groups
            - name: matchbox-profiles
              mountPath: /var/lib/matchbox/profiles
            - name: matchbox-generic
              mountPath: /var/lib/matchbox/generic
            - name: matchbox-ignition
              mountPath: /var/lib/matchbox/ignition
            - name: assets
              mountPath: /var/lib/matchbox/assets
            - name: assets-scripts
              mountPath: /var/lib/matchbox/assets/scripts

        # download docker fs as host rootfs
        - name: rootfs-updater
          image: n0rad/alpine-docker
          imagePullPolicy: IfNotPresent
          command: [ sh, /rootfs-update.sh ]
          workingDir: /var/lib/matchbox/assets/root-filesystems
          securityContext:
            privileged: true
          volumeMounts:
            - name: assets
              mountPath: /var/lib/matchbox/assets
            - name: scripts
              mountPath: /rootfs-update.sh
              subPath: rootfs-update.sh

        # run custom scripts like downloading iso images
        {{ range $index, $element := .Values.matchbox.runScripts }}
        - name: {{ $index | replace "." "-" }}
          image: n0rad/alpine-base
          imagePullPolicy: IfNotPresent
          command: [ sh, /{{ $index }} ]
          workingDir: /var/lib/matchbox/assets
          volumeMounts:
            - name: assets
              mountPath: /var/lib/matchbox/assets
            - name: run-scripts
              mountPath: /{{ $index }}
              subPath: {{ $index }}
        {{ end }}

      volumes:
        - name: matchbox-groups
          configMap:
            name: {{.Release.Name}}-groups
        - name: matchbox-profiles
          configMap:
            name: {{.Release.Name}}-profiles
        - name: matchbox-ignition
          configMap:
            name: {{.Release.Name}}-ignition
        - name: matchbox-generic
          configMap:
            name: {{.Release.Name}}-generic
        - name: assets-scripts
          configMap:
            name: {{.Release.Name}}-assets-scripts
        - name: run-scripts
          configMap:
            name: {{.Release.Name}}-run-scripts
        - name: scripts
          configMap:
            name: {{.Release.Name}}-scripts
        - name: assets
          hostPath:
            path: {{ .Values.mountPath }}
